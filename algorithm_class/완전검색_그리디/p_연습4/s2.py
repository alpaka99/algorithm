"""
연습문제 4. 순열

4-2) 재귀로 순열 생성하기
[1, 2, 3]을 포함하는 모든 순열을 재귀 함수를 활용하여 구현하시오.

** 각 자리를 어떻게 확정 시킬 것인가에 초점을 맞춰 구현해보세요!
** swap하는 방식과 방문 처리를 하는 방식으로 모두 구현해보세요!
"""

nums = [1, 2, 3]

#0. 순열이 생성되는 과정 그려보기
# 순열이 생성되는 과정을 반드시 먼저 손으로 그려보고 코드 작성

#1. swap
# parameter : n(전체 원소의 갯수), k(선택한 원소의 갯수)
def perm_swap(n, k):
    if k == n:
        print(nums)
        return
    for i in range(k, n):
        nums[i], nums[k] = nums[k], nums[i]
        perm_swap(n, k+1)
        nums[i], nums[k] = nums[k], nums[i]

perm_swap(3, 0)

"""
# [1, 2, 3]
# perm_swap(3, 0) : 0 <-> 0, 0 <-> 1,  0 <-> 2 교환하여 각 각 perm_swap(3, 1) 로
# 0 <-> 1 된 경우([2, 1, 3]) perm_swap(3, 1) : 1 <-> 1, 1 <-> 2 로 교환하여 각 각 perm_swap(3, 2)로
# 1 <-> 2 된 경우([2, 3, 1]) perm_swap(3, 2) : 2 <-> 2로 교환하여 perm_swap(3, 3)으로
# [2, 3, 1], perm_swap(3, 3) : print([2, 3, 1]) return!
# 결국 트리 구조로 스왑한 모든 결과들이 재귀를 돈다
- by 지수님
"""

"""
재귀가 돌아가면서 k는 가장 첫 인덱스부터 가장 끝 인덱스까지 변한다.
이 k에 따라 트리가 분기하며 순열이 생성된다.

예를 들면 맨 처음에는 k = 0일때, k = 1일때, k = 2일때로 분기한다.
그 이후에 내부의 i 변수가 k가 될 때 까지 swap해서 새로운 순열을 만든 후 
재귀적으로 perm 함수를 돌려준다.

-내가 이해한 방법... 그래도 아직 완벽하지는 않다.-

"""
'''
k=0                        1 2 3
               ↙             ↓            ↘
k=1       1 2 3            2 1 3              3 2 1
          ↙    ↘           ↙    ↘             ↙    ↘   
k=2    1 2 3   1 3 2    2 1 3   2 3 1     3 2 1     3 1 2
'''

#2. visited
nums = [1, 2, 3]
visited = [0 for _ in range(len(nums))]
# 기존의 nums 배열의 요소들을 이동시키며 순열을 구함
def perm_visited(n:int, k:int):
    if n == k:
        print(nums)
        return

