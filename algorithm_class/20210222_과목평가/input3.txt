arr = [5, 2, 6, 1, 9, 3, 7, 8, 4]

# arr을 오름차순으로 선택정렬
1. 선택정렬을 위한 슈도코드를 완성하시오

선택정렬을 오름차순으로 정렬하려면 현재 포인터가 가리키고 있는 값을
그 뒤에 있는 값들 중 최솟값과 바꿔주면 됨
이것을 배열의 끝까지 진행해주면 자연적으로 맨앞은 최솟값으로 시작해서 갈 수록 값이 커지는
오름차순 선택정렬이 됨

슈도코드(pseudo code)

# 가장 끝 바로 앞 값까지의 값들을 그 이후의 배열의 값들과 비교
for i in range(len(arr)-1):
    # 현재 가리키고 있는 값을 가장 작은 값으로 설정
    min_number = arr[i]
    # 이후 배열의 뒤쪽을 돌면서
    for j in range(i+1, len(arr)):
        # 자신보다 작은 값이 나오면
        if arr[j] < arr[i]:
            # 자리를 바꿔줌
            arr[i], arr[j] -> arr[j], arr[i]


2. 선택 정렬은 배열의 요소 간 교환이 일어나며 배열을 정렬하는 알고리즘이다. 교환이
일어났을 때 배열의 모양을 모두 나열하고 교환이 일어나는 횟수를 적으시오(단, 교환이란
서로 다른 두 요소 간의 위치 변경을 의미한다.)
예시)
    - 1 2 6 5 9 3 7 8 4 => 1, 5 교환
[5, 2, 6, 1, 9, 3, 7, 8, 4] => 시작
[2, 5, 6, 1, 9, 3, 7, 8, 4] => 0, 1 교환
[1, 5, 6, 2, 9, 3, 7, 8, 4] => 0, 3 교환
[1, 2, 6, 5, 9, 3, 7, 8, 4] => 1, 3 교환
[1, 2, 5, 6, 9, 3, 7, 8, 4] => 2, 3 교환
[1, 2, 3, 6, 9, 5, 7, 8, 4] => 2, 5 교환
[1, 2, 3, 5, 9, 6, 7, 8, 4] => 3, 5 교환
[1, 2, 3, 4, 9, 6, 7, 8, 5] => 3, 8 교환
[1, 2, 3, 4, 6, 9, 7, 8, 5] => 4, 5 교환
[1, 2, 3, 4, 5, 9, 7, 8, 6] => 4, 8 교환
[1, 2, 3, 4, 5, 7, 9, 8, 6] => 5, 6 교환
[1, 2, 3, 4, 5, 6, 9, 8, 7] => 5, 8 교환
[1, 2, 3, 4, 5, 6, 8, 9, 7] => 6, 7 교환
[1, 2, 3, 4, 5, 6, 7, 9, 8] => 6, 8 교환
[1, 2, 3, 4, 5, 6, 7, 8, 9] => 7, 8 교환
14번 교환

